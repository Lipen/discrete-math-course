#import "common.typ": *
#show: template

#set page(
  paper: "a4",
  margin: (top: 3cm, rest: 2cm),
  header: [
    #set text(10pt)
    #smallcaps[*Домашнее задание \#1*]
    #h(1fr)
    *Дискретная математика*
    \
    *Теория множеств*
    #h(1fr)
    *$#emoji.leaf.maple$Осень 2025*
    #place(bottom, dy: 0.4em)[
      #line(length: 100%, stroke: 0.6pt)
    ]
  ],
)

#set text(12pt)
#set par(justify: true)

#show table.cell.where(y: 0): strong

#show heading.where(level: 2): set block(below: 1em, above: 1.4em)

#show emph: set text(fill: blue.darken(20%))

#let power(x) = $cal(P)(#x)$
#let pair(a, b) = $angle.l #a, #b angle.r$
#let card(x) = $abs(#x)$
#let Jaccard = $cal(J)$
#let JaccardDist = $d_cal(J)$
#let FuzzyJaccard = $tilde(cal(J))$
#let Cosine = $cal(C)$
#let CosineDist = $d_cal(C)$

#let Green(x) = text(green.darken(20%), x)
#let Red(x) = text(red.darken(20%), x)

#let True = Green(`true`)
#let False = Red(`false`)

#let YES = Green(sym.checkmark)
#let NO = Red(sym.crossmark)

#let tasklist(id, cols: 1, body) = {
  let s = counter(id)
  s.update(1) // Start from 1

  set enum(numbering: _ => context {
    s.step()
    s.display("1.")
  })

  columns(cols, gutter: 1em)[#body]
}

== Задача 1: Проверка утверждений теории множеств

Определите истинность каждого утверждения как #True или #False.
Приведите краткие обоснования.
Считайте, что $a$ и $b$ — различные ($a eq.not b$) _урэлементы_ (атомарные объекты, не являющиеся множествами).

#tasklist("steps1", cols: 3)[
  + $a in {{a}, b}$
  + ${a} in {a, {a}}$
  + ${a} subset.eq {{a}, {b}}$
  + ${a, b} in {a, b}$
  + ${{a}, b} subset.eq {a, {a, b}, {b}}$
  + ${{a}} subset {{a}, {a}}$
  + ${a, a, a} without {a} = {a, a}$
  #colbreak()
  + $emptyset in emptyset$
  + $emptyset in {emptyset}$
  + $emptyset in {{emptyset}}$
  + $emptyset subset.eq emptyset$
  + $emptyset subset emptyset$
  + $emptyset subset.eq {{emptyset}}$
  + ${emptyset, emptyset} subset {emptyset}$
  #colbreak()
  + $power(emptyset) = {emptyset}$
  + $a in power({a})$
  + $power({a, emptyset}) subset power({a, b, emptyset})$
  + ${a, b} subset.eq power({a, b})$
  + ${a, a} in power({a, a})$
  + ${{a}, emptyset} subset.eq power({a, a})$
  + $power({a, b}) supset.eq {{a}, {emptyset}}$
]


== Задача 2: Операции над множествами

#let Threats = $T$
#let Active = $A$
#let Human = $P$
#let Network = $N$
#let Critical = $C$
#let High = $H$
#let Medium = $M$

Команда кибербезопасности отслеживает различные типы _сетевых угроз_.
Они классифицируют угрозы во множества на основе векторов атак:
- $Active = {"malware", "phishing", "ddos", "ransomware", "botnet"}$
  #h(1fr) (_активно_ обнаруживаемые угрозы)
- $Human = {"phishing", "social-eng", "ddos", "insider", "malware"}$
  #h(1fr) (угрозы, направленные на _людей_)
- $Network = {"ransomware", "cryptojack", "ddos", "botnet", "worm"}$
  #h(1fr) (угрозы, требующие _сетевого доступа_)

Универсальное множество $Threats = Active union Human union Network$ содержит все различные типы угроз, упомянутые выше.

*Примечание:* Все дополнения ($overline(X)$) берутся относительно универсального множества $Threats$.

*Часть (a):*
Вычислите следующее и интерпретируйте каждый результат в контексте кибербезопасности:
#tasklist("steps2a", cols: 4)[
  + $Active inter Human$
  + $Active union Network$
  #colbreak()
  + $(Active inter Human) without Network$
  + $overline(Active) inter Human$
  #colbreak()
  + $Active symdiff Human$
  + $Human without (Active union Network)$
  #colbreak()
  + $power({Active, Human, Network})$
  + $card((Human union Network) inter overline(Active))$
]

*Часть (b):*
Команде безопасности необходимо эффективно сортировать угрозы по приоритету.
Определите _уровни приоритета_:
- Критический: $Critical = Active inter Human inter Network$
  #h(1fr) (активные, направленные на людей, сетевые)
- Высокий: $High = (Active inter Human) without Network$
  #h(1fr) (активные и направленные на людей, но не сетевые)
- Средний: $Medium = Active without (Critical union High)$
  #h(1fr) (остальные активные угрозы)

+ Вычислите $Critical$, $High$, $Medium$.
+ Определите, является ли ${Critical, High, Medium}$ разбиением множества $Active$.

*Часть (c):*
Нарисуйте диаграмму Венна, показывающую множества $Active$, $Human$ и $Network$ со всеми типами угроз, помеченными в соответствующих областях.
Используйте цвета для обозначения категорий приоритетов.


#pagebreak()

== Задача 3: Метрики сходства и расстояния

Стриминговые сервисы используют меры сходства для рекомендации контента.

Будем рассматривать _предпочтения пользователей_ как множества жанров, которые им нравятся.
Например, если Анна любит запутанные сюжеты, её множество предпочтений: $A = {"Фантастика", "Триллер"}$.

#align(center, table(
  columns: 9,
  align: (x, y) => {
    let h = if x == 0 { right } else { center }
    let v = if y == 0 { bottom }
    h + v
  },
  stroke: (x, y) => if y == 0 { (bottom: 0.8pt) },
  table.header(
    [],
    rotate(-90deg, reflow: true)[Фантастика],
    rotate(-90deg, reflow: true)[Триллер],
    rotate(-90deg, reflow: true)[Драма],
    rotate(-90deg, reflow: true)[Романтика],
    rotate(-90deg, reflow: true)[Ужасы],
    rotate(-90deg, reflow: true)[Комедия],
    rotate(-90deg, reflow: true)[Боевик],
    rotate(-90deg, reflow: true)[Фэнтези],
  ),
  [*Анна*], [#YES], [#YES], [#NO], [#NO], [#NO], [#NO], [#NO], [#NO],
  [*Борис*], [#NO], [#YES], [#YES], [#YES], [#NO], [#NO], [#NO], [#NO],
  [*Клара*], [#NO], [#NO], [#YES], [#YES], [#YES], [#YES], [#NO], [#NO],
  [*Диана*], [#YES], [#NO], [#NO], [#NO], [#NO], [#YES], [#YES], [#YES],
))

*Часть (a):*
_Коэффициент сходства Жаккара_ измеряет степень пересечения вкусов двух пользователей:
$
  Jaccard(X, Y) = frac(
    card(X inter Y),
    card(X union Y)
  ) = frac(
    "общие предпочтения",
    "всего уникальных предпочтений"
  )
$
с соглашением, что $Jaccard(emptyset, emptyset) = 1$.

_Расстояние Жаккара_ измеряет, насколько различаются пользователи:
$
  JaccardDist(X, Y) = 1 - Jaccard(X, Y)
$

+ Вычислите $Jaccard(X, Y)$ и $JaccardDist(X, Y)$ для всех пар пользователей.
+ Определите, какая пара наиболее похожа, а какая наиболее различна.
+ Постройте граф с пользователями в качестве вершин и рёбрами, взвешенными по коэффициенту сходства Жаккара, за исключением рёбер с весом 0.
+ Постройте $G_(0.25)$: граф с рёбрами, где коэффициент сходства Жаккара $>= 0.25$.
  Перечислите компоненты связности.

*Часть (b):*
_Косинусное сходство_ для множеств можно определить#footnote[#link("https://en.wikipedia.org/wiki/Cosine_similarity#Otsuka–Ochiai_coefficient")[коэффициент Оцука–Очиаи]] как:
$
  Cosine(X, Y) = frac(
    card(X inter Y),
    sqrt(card(X) dot card(Y))
  )
$

_Косинусное расстояние_ равно $CosineDist(X, Y) = 1 - Cosine(X, Y)$.

+ Вычислите $Cosine(X, Y)$ и $CosineDist(X, Y)$ для всех пар пользователей.
+ Определите, какая пара наиболее похожа, а какая наиболее различна.
+ Постройте граф с пользователями в качестве вершин и рёбрами, взвешенными по косинусному сходству.
+ Покажите, что $Jaccard(X, Y) <= Cosine(X, Y)$ для любых непустых конечных множеств $X$ и $Y$.
  Когда~выполняется равенство?

*Часть (c):*
Докажите, что расстояние Жаккара удовлетворяет неравенству треугольника:
$
  JaccardDist(A, C) <= JaccardDist(A, B) + JaccardDist(B, C)
$
для любых конечных множеств $A$, $B$ и $C$.

// Prove that equality holds if and only if $A subset.eq B subset.eq C$ or $C subset.eq B subset.eq A$.

*Часть (d):*
Покажите, что косинусное расстояние НЕ удовлетворяет неравенству треугольника, предоставив конкретный контрпример.
Найдите три непустых множества $X$,~$Y$ и $Z$ такие, что:
$
  CosineDist(X, Z) > CosineDist(X, Y) + CosineDist(Y, Z)
$

*Часть (e):*
Новый пользователь присоединяется с предпочтениями $U = {"thriller", "horror"}$.
Используя коэффициент сходства Жаккара, найдите существующих пользователей со сходством $>= 0.25$ для рекомендации как "пользователи со схожими вкусами".

*Задача повышенной сложности:*
Разработайте собственную метрику сходства, которая, по вашему мнению, работала бы лучше коэффициента Жаккара для рекомендаций фильмов.
Объясните ваше обоснование.


== Задача 4: Логические и теоретико-множественные тождества

Эта задача связывает теорию множеств и логические рассуждения, подготавливая вас к формальным доказательствам.

*Часть (a):*
Переведите каждое утверждение в логику первого порядка с кванторами над универсальным множеством $U$:
+ $A subset.eq B$
+ $A = B$
+ $A subset.eq B iff power(A) subset.eq power(B)$

*Часть (b):*
Докажите следующие тождества, используя как диаграммы Венна, так и символические рассуждения:
+ $(A without B) union (B without A) = (A union B) without (A inter B)$
+ Законы де Моргана: $overline(A union B) = overline(A) inter overline(B)$ и $overline(A inter B) = overline(A) union overline(B)$
+ $A subset.eq B$ тогда и только тогда, когда $A inter B = A$ тогда и только тогда, когда $A union B = B$
+ Распределительный закон: $A inter (B union C) = (A inter B) union (A inter C)$

*Часть (c):*
Для любого универсального множества $U$ и множества $X subset.eq U$ докажите, что оператор дополнения является:
+ _Инволюцией_: $overline(overline(X)) = X$
+ Обращающим порядок (_антимонотонным_): если $X subset.eq Y$, то $overline(Y) subset.eq overline(X)$


#pagebreak()

== Задача 5: Системы координат

Разработчик игр проектирует 2D-головоломку с различными игровыми зонами.
Каждая зона определяется конкретными координатными областями в $RR^2$.

*Часть (a):*
Изобразите все игровые зоны на координатной плоскости:
+ Игровая область: $G = [0; 8] times [0; 7]$
+ Безопасная зона: $S = (1; 4) times (5, 7]$
+ Непроходимая стена: $W = { pair(x, 4) | 0 <= x <= 6 }$
+ Зона опасности: $D = { pair(x, y) in G | y < x "или" y < 4 }$
+ Зоны сокровищ: $T = { pair(x, y) | x in {1,2,3}, 1 <= y < 3 }$
+ Арена босса: $B = { pair(x, y) in G | 16 (x - 9)^2 + 25 y^2 <= 400 }$

*Часть (b):*
Усиления появляются в узлах решётки (целочисленные координаты) внутри зоны опасности $D$, исключая стену $W$ и границы $G$.
Подсчитайте количество таких точек.

*Часть (c):*
Игрок начинает в позиции $P_0 = pair(2, 6)$ и совершает ровно три перехода согласно векторам $v_1 = pair(4, 0)$, #box($v_2 = pair(1, -2)$) и $v_3 = pair(-4, -3)$ (в заданном порядке).
+ Вычислите позицию игрока после каждого хода: $P_i = P_(i-1) + v_i$, для $i = 1, 2, 3$.
+ Определите, в каких зонах находится игрок после каждого хода.
+ Попадает ли игрок когда-либо в арену босса $B$?


== Задача 6: Самореферентные головоломки с множествами

В информатике рекурсивные структуры данных ссылаются на себя.
Следующие математические головоломки исследуют аналогичные самореферентные концепции, которые встречаются в программировании, логике и даже философии.

*Часть (a):*
Найдите все множества $X$ и $Y$, которые удовлетворяют данной системе:
$
  X & = {1, 2, card(Y)} \
  Y & = {card(X), 3, 4}
$

Начните с определения возможных значений для $card(X)$ и $card(Y)$, затем проверьте, какие комбинации дают решение.

*Часть (b):*
Рассмотрим более сложную систему:
$
  A & = {1, card(B), card(C)} \
  B & = {2, card(A), card(C)} \
  C & = {1, 2, card(A), card(B)}
$

Найдите все верные решения $(A, B, C)$.
Объясните, почему некоторые потенциальные решения не работают.

*Часть (c):*
Разработайте собственную _нетривиальную_ самореферентную систему множеств, содержащую 2–4 множества.


#pagebreak()

== Задача 7: Нечёткая логика

В реальном мире границы не всегда чёткие.
Рост 180 см это высокий?
10°C это тепло?
_Нечёткие множества_ моделируют эту неопределённость и являются важными в ИИ, машинном обучении и системах управления.

В отличие от классических множеств, где принадлежность бинарна (принадлежит/не принадлежит), нечёткие множества присваивают каждому элементу _степень принадлежности_ $mu(x) in [0;1] subset.eq RR$, представляющую, насколько "сильно" элемент принадлежит множеству.

Рассмотрите два нечётких множества над $X = {a,b,c,d,e}$:
$
  F & = { a:0.4, b:0.8, c:0.2, d:0.9, e:0.7 } \
  R & = { a:0.6, b:0.9, c:0.4, d:0.1, e:0.5 }
$

Например, $mu_F (b) = 0.8$ означает, что элемент $b$ принадлежит нечёткому множеству $F$ со степенью $0.8$.

*Часть (a):*
Определите дополнение нечёткого множества S как $mu_overline(S)(x) = 1 - mu_S (x)$.
Вычислите $overline(F)$ и $overline(R)$.

*Часть (b):*
Для объединения определите $mu_(S union T)(x) = max{mu_S (x), mu_T (x)}$.
Вычислите $F union R$.

*Часть (c):*
Для пересечения определите $mu_(S inter T)(x) = min{mu_S (x), mu_T (x)}$.
Вычислите $F inter R$.

*Часть (d):*
Предложите и обоснуйте определение для $S without T$.
Вычислите $F without R$ и $R without F$.

*Часть (e):*
Один нечёткий аналог сходства Жаккара:
$
  FuzzyJaccard_f (F,R) = frac(
    sum_(x in X) min { mu_F (x), mu_R (x) },
    sum_(x in X) max { mu_F (x), mu_R (x) }
  )
$
Вычислите $FuzzyJaccard_f (F,R)$ и соответствующее расстояние $1 - FuzzyJaccard_f (F,R)$.

*Часть (f): Дефаззификация.*
Предположим, что система запускает предупреждение, если степень принадлежности элемента к #box[$F union R$] превышает $0.75$.
Перечислите все элементы, запускающие предупреждение, с их степенями принадлежности, и кратко обсудите, как изменение данного порогового значения влияло бы на чувствительность системы и количество предупреждений.


== Задача 8: Булеаны множеств

Пусть $A$ и $B$ — конечные множества.
Для каждого утверждения ниже либо приведите _строгое доказательство_, либо найдите _контрпример_, опровергающий данное утверждение.

+ Если $A subset.eq B$, то $power(A) subset.eq power(B)$
+ $power(A inter B) = power(A) inter power(B)$
+ $power(A union B) = power(A) union power(B)$
+ $card(power(A times B)) = 2^(card(A) dot card(B))$


#line(length: 100%, stroke: 0.4pt)

#pagebreak()

*Указания по оформлению работы:*
- Для вычислительных задач чётко показывайте все шаги решения и рассуждения.
- Для доказательств сформулируйте, что вы доказываете, приведите ясные логические шаги и завершите сочетанием "ч.т.д." или символом $square$.
- Для ложных утверждений приведите конкретные контрпримеры.
- Обсуждайте задачи с одногруппниками, но пишите все решения самостоятельно.
- Сдавайте работу в формате PDF с чётко пронумерованными задачами и разборчивым почерком.

*Критерии оценки:*
- Точность вычислений: 50% \
  #text(.7em)[(Получение правильного ответа)]
- Математические рассуждения и качество доказательств: 30% \
  #text(.7em)[(Демонстрация ясного логического мышления)]
- Оформление и ясность изложения: 20% \
  #text(.7em)[(Удобство восприятия ваших решений)]
